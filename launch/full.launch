<?xml version="1.0"?>
<launch>

    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find little_pig_ctrl)/config/custom_rosconsole.conf"/>

    <!-- Generic parameters -->
	<arg name="robot" value="basic_laser_pig"/>     <!-- This needs to take a better name -->
	<arg name="sim" value="false"/>                  <!-- true will run simulation components -->

    <!-- Gazebo parameters -->
    <arg name="world_name" value="gas_station"/>    <!-- This is the world gazebo will launch -->

    <!-- CAN parameters -->
    <arg name="can_device" value="can0"/>
    <arg name="interval_ms" value="500"/>

    <!-- Namespace parameters for yaml files -->
    <arg name="ekf_odom" value="EKF_Odom"/>
    <arg name="ekf_map" value="EKF_Map"/>
    <arg name="navsat" value="Navsat"/>
    <arg name="gmapping" value="Gmapping"/>
    <arg name="lidar" value="LiDAR"/>
    <arg name="twist" value="Twist"/>
    <arg name="CANBUS" value="CANopen"/>


    <rosparam command="load" file="$(find little_pig_navigation)/params/ekf_1_sim.yaml" ns="$(arg ekf_odom)"/>
    <rosparam command="load" file="$(find little_pig_navigation)/params/ekf_2_sim.yaml" ns="$(arg ekf_map)"/>
    <rosparam command="load" file="$(find little_pig_navigation)/params/navsat.yaml" ns="$(arg navsat)"/>
    <rosparam command="load" file="$(find little_pig_navigation)/params/gmapping.yaml" ns="$(arg gmapping)"/>
    <rosparam command="load" file="$(find little_pig_navigation)/params/LiDAR.yaml" ns="$(arg lidar)"/>
    <rosparam command="load" file="$(find little_pig_ctrl)/config/teleop.yaml"/>
    <rosparam command="load" file="$(find little_pig_ctrl)/config/twist_mux.yaml" ns="$(arg twist)"/>

    <group if="$(arg sim)">
        <rosparam command="load" file="$(find little_pig_ctrl)/config/motor_controller_sim.yaml"/>
        <rosparam command="load" file="$(find little_pig_gazebo)/config/gazebo_controller_gains.yaml"/>
    </group>

    <group unless="$(arg sim)">
        <rosparam command="load" file="$(find little_pig_ctrl)/config/motor_controller.yaml"/>
        <rosparam command="load" file="$(find little_pig_ctrl)/config/motor_driver.yaml" ns="$(arg CANBUS)"/>
    </group>

    <!-- Teleop Joystick -->
    <remap from="cmd_vel" to="Twist/teleop_joy_cmd_vel" />
    <include file="$(find little_pig_ctrl)/launch/teleop.launch" />
    <remap from="cmd_vel" to="cmd_vel" /> <!-- To prevent future problems -->

    <!-- Loads robot description to parameter server -->
    <include file="$(find little_pig_description)/launch/upload_robot.launch">
        <arg name="robot" value="$(arg robot)"/>
    </include>

    <!-- Publishes static transforms for fixed joints -->
    <node name="vehicle_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <group if="$(arg sim)">

        <!-- Start Gazebo world with given name if desired -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <!-- <arg name="world_name" value="$(find little_pig_gazebo)/worlds/$(arg world_name).world"/> -->
        </include>

        <!-- Loads URDF into gazebo and starts plugins -->
        <include file="$(find little_pig_gazebo)/launch/spawn_robot.launch">
            <arg name="robot" value="$(arg robot)"/>
        </include>

    </group>


    <!-- Launches robot localization instance 1 -->
    <include file="$(find little_pig_navigation)/launch/ekf_1_sim.launch"> 
        <arg name="name" value="$(arg ekf_odom)"/>
    </include>

    <!-- Launches robot localization instance 2 including navsat corrections -->
    <include file="$(find little_pig_navigation)/launch/ekf_2_sim.launch">
        <arg name="name" value="$(arg ekf_map)"/>
    </include>

    <!-- Launches navsat Transform instance -->
    <include file="$(find little_pig_navigation)/launch/navsat_sim.launch">
        <arg name="name" value="$(arg navsat)"/>
    </include>

    <!-- Launch gmapping instance, only necessary in learning -->
    <!-- <include file="$(find little_pig_navigation)/launch/gmapping.launch">
        <arg name="name" value="$(arg gmapping)"/>
    </include> -->

    <group unless="$(arg sim)">

        <remap from="CANopen/ackermann_controller/cmd_vel" to="ackermann_controller/cmd_vel"/>
        <remap from="CANopen/ackermann_controller/odom" to="ackermann_controller/odom"/>

        <include file="$(find little_pig_ctrl)/launch/canopen_402.launch">
            <arg name="name" default="$(arg CANBUS)"/>
            <arg name="can_device" value="$(arg can_device)"/>
            <!-- <arg name="reset_errors_before_recover" value="$(arg reset_errors_before_recover)"/ Deemed Unnecessary -->
        </include>

        <!-- Launches mavros instance -->
        <include file="$(find little_pig_navigation)/launch/mavros.launch" />

        <!-- Launches rpLidar instance -->
        <include file="$(find little_pig_navigation)/launch/lidar.launch" />

    </group>

    <!-- Spawns rviz with preset configuration --> <!-- Should go to default -->
    <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find little_pig_rviz)/rviz/full_sim.rviz" required="true"/> -->

    <!-- cmd_vel mux -->
    <remap from="cmd_vel_out" to="ackermann_controller/cmd_vel" />
    <node pkg="twist_mux" type="twist_mux" name="Twist"/>
    <remap from="cmd_vel_out" to="cmd_vel_out" /> <!-- To prevent future problems -->

    <node pkg="little_pig_ctrl" type="pig_driver_node" name="PigDriver"/>
    <node pkg="rosservice" type="rosservice" name="start_motor" args="call --wait /Piggy/motor_start"/>
</launch>
