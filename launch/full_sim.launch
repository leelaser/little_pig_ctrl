<?xml version="1.0"?>
<launch>

    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find little_pig_ctrl)/config/custom_rosconsole.conf"/>

    <!-- Generic parameters -->
	<arg name="robot" value="little_pig_base"/>     <!-- This needs to take a better name -->
	<arg name="sim" value="true"/>                  <!-- true will run simulation components -->
    
    <!-- Gazebo parameters -->
    <arg name="world_name" value="small"/>    <!-- This is the world gazebo will launch -->

    <!-- URDF parameters -->
    <arg name="path2urdf" value="$(find little_pig_description)"/>

    <!-- CAN parameters -->
    <arg name="can_device" value="can0"/>
    <arg name="interval_ms" value="500"/>
    <arg name="path2can_config" value="$(find little_pig_ctrl)"/>

    <!-- Controll parameters -->
    <arg name="path2control_config" value="$(find little_pig_ctrl)"/>

    <!-- Namespace parameters -->
    <arg name="sim_ns" value="simulation"/>

    <group ns="$(arg robot)">
    
        <include file="$(find little_pig_description)/launch/upload_robot.launch">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="pkg_hardware_config" value="$(arg path2urdf)"/>
        </include>

        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

        <!-- Commented this out after writing the tf broadcasters and listeners -->
        <!-- <node name="vehicle_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /> -->

        <group if="$(arg sim)" ns="$(arg sim_ns)">

            <!-- Start Gazebo world with given name -->
            <include file="$(find gazebo_ros)/launch/empty_world.launch">
                <arg name="world_name" value="$(find little_pig_gazebo)/worlds/$(arg world_name).world"/>
            </include>

            <!-- Loads URDF into gazebo and starts plugins -->
            <include file="$(find little_pig_gazebo)/launch/simulation.launch">
                <arg name="robot" value="$(arg robot)"/>
                <arg name="sim_ns" value="$(arg sim_ns)"/>
            </include>

            <!-- This remap needs overriden if teb is to be used -->
            <remap from="cmd_vel" to="ackermann_controller/cmd_vel" />
            <include file="$(find little_pig_ctrl)/launch/teleop.launch" /> <!-- TELEOP -->

            <!-- Static transform to fix issues with naming convention in rviz -->
            <node pkg="tf2_ros" type="static_transform_publisher" name="static_tf" args="0 0 0 0 0 0 laser_link front_laser/laser_link" />
	        <node pkg="tf2_ros" type="static_transform_publisher" name="static_tf_back" args="0 0 0 0 0 0 laser_link_back back_laser/laser_link_back" />

            <!-- Spawns rviz with preset configuration -->
            <node name="rviz" pkg="rviz" type="rviz" args="-d $(find little_pig_rviz)/rviz/full_sim.rviz" required="true"/>

            <!-- Launch gmapping instance, only necessary in learning -->
            <include file="$(find little_pig_navigation)/launch/gmapping_sim.launch" />

            <!-- Launches robot localization instance 1 -->
            <include file="$(find little_pig_navigation)/launch/ekf_1_sim.launch" />
            
            <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="static_tf2" args="0 0 0 0 0 0 map odom"/> -->
            
            <!-- Launches robot localization instance 2 including navsat corrections -->
            <include file="$(find little_pig_navigation)/launch/ekf_2_sim.launch" />

            <!-- Launches navsat Transform instance -->
            <include file="$(find little_pig_navigation)/launch/navsat_sim.launch" />

        </group>

        <group unless="$(arg sim)">

            <!-- This is only a temporary solution to namespace problems -->
            <group ns="CANopen"> 
                <include file="$(find little_pig_description)/launch/upload_robot.launch">
                    <arg name="robot" value="$(arg robot)"/>
                    <arg name="pkg_hardware_config" value="$(arg path2urdf)"/>
                </include>
            </group>

            <include file="$(find little_pig_ctrl)/launch/canopen_402.launch">
                <arg name="robot" value="$(arg robot)"/>
                <arg name="pkg_hardware_config" value="$(arg path2can_config)"/>
                <arg name="component_name" value="CANopen"/>
                <arg name="can_device" value="$(arg can_device)"/>
                <arg name="interval_ms" value="$(arg interval_ms)"/>
                <!-- <arg name="reset_errors_before_recover" value="$(arg reset_errors_before_recover)"/ Deemed Unnecessary -->
            </include>

            <!-- <remap from="CANopen/controller_manager/propulsion_controller/command/" to="basic_pig/ackermann_controller/cmd_vel/x" /> -->

            <include file="$(find little_pig_ctrl)/launch/generic_controller.launch"> <!-- Calls generic_controller launch -->
                <arg name="robot" value="$(arg robot)"/>
                <arg name="component_name" value="CANopen"/>
            </include>

            <remap from="cmd_vel" to="CANopen/ackermann_controller/cmd_vel" />
            <include file="$(find little_pig_ctrl)/launch/teleop.launch" />

            <!-- Spawns rviz with preset configuration -->
            <node name="rviz" pkg="rviz" type="rviz" args="-d $(find little_pig_rviz)/rviz/full.rviz" required="true"/>

            <!-- Launches mavros instance -->
            <include file="$(find little_pig_navigation)/launch/mavros.launch" />

            <!-- Launches gmapping instance, only necessary in learning -->
            <include file="$(find little_pig_navigation)/launch/gmapping.launch" />

            <!-- Launches robot localization instance 1 -->
            <include file="$(find little_pig_navigation)/launch/ekf_1.launch" />
            
            <!-- Launches robot localization instance 2 including navsat corrections -->
            <include file="$(find little_pig_navigation)/launch/ekf_2.launch" />

            <!-- Launches navsat Transform instance -->
            <include file="$(find little_pig_navigation)/launch/navsat.launch" />

            <!-- Launches rpLidar instance -->
        	<include file="$(find little_pig_navigation)/launch/lidar.launch" />

        </group>

    </group>

</launch>
